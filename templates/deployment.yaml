apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "default-app.fullname" . }}
  namespace: {{ include "default-app.namespace" . }}
  labels:
    {{- include "default-app.labels" . | nindent 4 }}
  annotations:
    {{- include "default-app.annotations" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount | default 1 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "default-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "default-app.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: "{{ include "default-app.serviceAccountName" . }}"
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ include "default-app.fullname" . | default "app" }}
          image: "{{ .Values.image.repository | default "nginx" }}:{{ .Values.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          ports:
            {{- range $index, $port := .Values.service.ports }}
            - name: {{ $port.name | default (printf "port-%d" $index) }}
              containerPort: {{ $port.targetPort | default $port.port }}
              protocol: {{ $port.protocol | default "TCP" }}
            {{- else }}
            - name: default-port
              containerPort: 80
              protocol: TCP
            {{- end }}
          {{- with .Values.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          envFrom:
            {{- if and .Values.config (not .Values.configMountPath) }}
            - configMapRef:
                name: "{{ include "default-app.fullname" . }}-cm"
            {{- end }}
            {{- if and .Values.secret (not .Values.secretMountPath) }}
            - secretRef:
                name: "{{ include "default-app.fullname" . }}-secret"
            {{- end }}
            {{- if .Values.externalSecrets.enabled }}
            - secretRef:
                name: "{{ include "default-app.externalSecretName" . }}"
            {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- if and .Values.config .Values.configMountPath }}
            - name: {{ .Values.configVolumeMountName | default "config-volume" }}
              mountPath: {{ .Values.configMountPath }}
              readOnly: {{ .Values.configMountPathPermissions | default false }}
            {{- end }}
            {{- if and .Values.secret .Values.secretMountPath }}
            - name: {{ .Values.secretVolumeMountName | default "secret-volume" }}
              mountPath: {{ .Values.secretMountPath }}
              readOnly: true
            {{- end }}
            {{- if and .Values.externalSecrets.externalSecretMountPath .Values.externalSecrets.enabled }}
            - name: {{ .Values.externalSecrets.externalSecretVolumeMountName | default "external-secret-volume" }}
              mountPath: {{ .Values.externalSecrets.externalSecretMountPath }}
              readOnly: true
            {{- end }}
            {{- if .Values.persistent.enabled }}
            - name: persistent-storage
              mountPath: {{ .Values.persistent.mountPath | default "/data" }}
              readOnly: {{ .Values.persistent.readOnly | default false }}
            {{- end }}
      volumes:
        {{- if and .Values.config .Values.configMountPath }}
        - name: {{ .Values.configVolumeMountName | default "config-volume" }}
          configMap:
            name: "{{ include "default-app.fullname" . }}-cm"
        {{- end }}
        {{- if and .Values.secret .Values.secretMountPath }}
        - name: {{ .Values.secretVolumeMountName | default "secret-volume" }}
          secret:
            secretName: "{{ include "default-app.fullname" . }}-secret"
        {{- end }}
        {{- if and .Values.externalSecrets.externalSecretMountPath .Values.externalSecrets.enabled }}
        - name: {{ .Values.externalSecrets.externalSecretVolumeMountName | default "external-secret-volume" }}
          secret:
            secretName: "{{ .Values.externalSecrets.k8sSecretName | default "default-secret" }}"
        {{- end }}
        {{- if .Values.persistent.enabled }}
        - name: persistent-storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistent.pvc.name | default (include "default-app.fullname" .) }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      priorityClassName: {{ .Values.priorityClassName | default "" }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds | default 30 }}