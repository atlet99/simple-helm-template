# Default values for default-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This is to set the chart version more information can be found here: https://helm.sh/docs/intro/charts/#version
appVersion: "1.0.0"

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: nginx
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
# example:
# imagePullSecrets:
#   - name: myregistrykey
imagePullSecrets: []
# This is to override the chart name.
nameOverride: "nedb-back-main"
fullnameOverride: "nedb-back-main"

# This field overrides the namespace for all resources.
namespaceOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

# This is for setting the securityContext for the pod.
# For more information checkout: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
podSecurityContext: {}
#  runAsGroup: 65532
#  runAsNonRoot: true
#  runAsUser: 65532
# allowPrivilegeEscalation: false

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      name: nodb-nginx-http
      protocol: TCP
    - port: 9000
      targetPort: 9000
      name: nodb-http

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: "traefik-ingress"
  annotations:
    "cert-manager.io/cluster-issuer": "letsencrypt-stage"
    "traefik.ingress.kubernetes.io/router.middlewares": "traefik-ip-whitelist@kubernetescrd"
    "traefik.ingress.kubernetes.io/router.entrypoints": "websecure"
    "traefik.ingress.kubernetes.io/router.tls": "true"
  hosts:
    - host: "back-dev.nobd-3.kz"
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: "back-dev-nobd-3-kz-tls"
      hosts:
        - "back-dev.nobd-3.kz"

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the configmap for variables more information can be found here: https://kubernetes.io/docs/concepts/configuration/configmap/
# config is a dictionary that will be converted to a configmap and mounted to the pod as a file
# example:
# config:
#   LOG_LEVEL: debug
config: {}

# configMountPath is a variable that defines the mount path for the config map
# if you want to mount the config map to a specific path in the container
# you can specify the path here, if you don't specify it the config map will be
# mounted to the default path which is /config
# configMountPathPermissions is a boolean that defines the permissions for the config map
# configVolumeMountName is a variable that defines the name of the config map volume
# configMapFile is a variable that defines the name of the config map file
configMapFile: ""
configMountPath: ""
configVolumeMountName: ""
configMountPathPermissions: false

# This is to setup the secrets for variables more information can be found here: https://kubernetes.io/docs/concepts/configuration/secret/
# example:
# secret:
#   DB_PASSWORD: password
#   DB_USER: user
secret: {}

# secretVolumeMountPath is a variable that defines the mount path for the secret
# if you want to mount the secret to a specific path in the container
# you can specify the path here, if you don't specify it the secret will be
# mounted to the default path which is /secret
# example:
# secretVolumeMountPath: /secret
secretVolumeMountName: ""
secretMountPath: ""

# This is to setup the external secrets for variables more information can be found here: https://github.com/external-secrets/external-secrets
# example:
# externalSecrets:
#   enabled: true
#   kind: "SecretStore" # or "ClusterSecretStore"
#   secretStoreName: "secret-store"
#   authSecretName: "yc-auth"
#   externalSecretName: "external-secret" # by default is default-app.externalSecretName
#   refreshInterval: "1h"
#   k8sSecretName: "k8s-secret"
#   secretKey: "password"
#   lockboxSecretID: "your-lockbox-secret-id"
#   propertyName: "password"
#   externalSecretMountPath: "/external-secret"
#   externalSecretVolumeMountName: "external-secret-volume"
externalSecrets:
  enabled: false
  externalSecretName: ""
  externalSecretMountPath: ""
  externalSecretVolumeMountName: ""

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe: {}
  # httpGet:
  #   path: /
  #   port: http
readinessProbe: {}
  # httpGet:
  #   path: /
  #   port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 75
    - type: Resource
      resource:
        name: memory
        targetAverageValue: 512Mi
    - type: External
      external:
        metric:
          name: http_requests_per_second
        target:
          value: 100

# This section is for setting up persistent storage more information can be found here: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
# enabled is a boolean that determines whether the persistent volume is enabled or not.
# pvc is a dictionary that contains the name and other options for the persistent volume claim.
# example:
# persistent:
#   enabled: true
#   pvc:
#     name: "custom-pvc"
#     size: 10Gi
#     storageClass: "csi-cinder-ssd-delete"
#     accessModes:
#       - ReadWriteMany
persistent:
  enabled: false
  pvc:
    name: "custom-pvc"
    size: 10Gi
    storageClass: ""
    annotations: {}
    accessModes:
      - ReadWriteMany
  mountPath: "/custom-path"
  readOnly: false

# nodeSelector is a dictionary that defines the node selection criteria for the pod.
# More information can be found here: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
nodeSelector: {}

# tolerations is a list of tolerations for the pod.
# More information can be found here: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# affinity is a dictionary that defines the scheduling rules for the pod.
# More information can be found here: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

# priorityClassName is a string that defines the priority class name for the pod.
# More information can be found here: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
priorityClassName: ""

# PodDisruptionBudget is a Kubernetes object that allows you to define the minimum number of replicas that must be available for a deployment.
# More information can be found here: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
podDisruptionBudget:
  enabled: false
  minAvailable: 1

# terminationGracePeriodSeconds is the amount of time the pod has to clean up and shut down before it is killed.
# More information can be found here: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
terminationGracePeriodSeconds: 30