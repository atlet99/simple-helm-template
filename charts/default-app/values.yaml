# Default values for default-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This is to set the chart version more information can be found here: https://helm.sh/docs/intro/charts/#version
appVersion: "1.0.0"

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: {}
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
# example:
# imagePullSecrets:
#   - name: myregistrykey
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This field overrides the namespace for all resources.
namespaceOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

# This is for setting the securityContext for the container.
# For more information checkout: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
containerSecurityContext: {}
# runAsUser: 2000
# allowPrivilegeEscalation: false
# capabilities:
#   add: ["NET_ADMIN", "SYS_TIME"]

# This is for setting the securityContext for the pod.
# For more information checkout: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
podSecurityContext: {}
#  runAsGroup: 65532
#  runAsNonRoot: true
#  runAsUser: 65532
# allowPrivilegeEscalation: false

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  type: ClusterIP
  ports: []
    # - port: 80
    #   targetPort: http
    #   name: http

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: app.example.com
      paths:
        - path: /
          pathType: Prefix
          port: 80
        - path: /api
          pathType: Prefix
          port: 8080
    - host: admin.example.com
      paths:
        - path: /
          pathType: Prefix
          port: 9090
  tls:
    - secretName: app-tls-secret
      hosts:
        - app.example.com
    - secretName: admin-tls-secret
      hosts:
        - admin.example.com

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the config map for variables more information can be found here: https://kubernetes.io/docs/concepts/configuration/configmap/
# example:
# configs:
#   keyValueEnvFromConfig:
#     enabled: true
#     name: "env-from-config"
#     useEnvFrom: true
#     data:
#       APP_ENV: "development"
#       APP_LOG_LEVEL: "info"
#   appConfig:
#     enabled: true
#     name: "app-config"
#     mountPath: "/config/app"
#     fileName: "app-config.yaml"
#     readOnly: false
#     data: |
#       user nginx;
#       worker_proccess auto;
#       events { worker_connections 1024; }
#       http {
#         server {
#           listen 80;
#           server_name localhost;
#           location / {
#             root /usr/share/nginx/html;
#             index index.html index.htm;
#           }
#         }
#       }
#   dbConfig:
#     enabled: true
#     name: "db-config"
#     mountPath: "/config/db"
#     fileName: "db-config.yaml"
#     readOnly: false
#     data: |
#       user nginx;
#       worker_proccess auto;
#       events { worker_connections 1024; }
#       http {
#         server {
#           listen 80;
#           server_name localhost;
#           location / {
#             root /usr/share/nginx/html;
#             index index.html index.htm;
#           }
#         }
#       }
#   configWithEnvKeys:
#     enabled: true
#     name: "config-with-env-keys"
#     envVars:
#       - envName: "USER_CONFIG_PARAMS"
#         key: "changeme"
#         optional: true
#       - envName: "API_VERSION"
#         key: "v3"
#         optional: false
#   configWithSubPath:
#     enabled: true
#     name: "config-with-sub-path"
#     mountPath: "/config/app"
#     subPath: "app-config.yaml"
#     fileName: "app-config.yaml"
#     readOnly: false
#     data: |
#       user nginx;
#       worker_proccess auto;
#       events { worker_connections 1024; }
#       http {
#         server {
#       }
#       }
#   configWithSubPathExpr:
#     enabled: true
#     name: "config-with-sub-path-expr"
#     mountPath: "/config/app"
#     subPathExpr: "$(POD_NAME)"
#     subPathExprFieldPath: "metadata.name"
#     fileName: "app-config.yaml"
#     readOnly: false
#     data: |
#       user nginx;
#       worker_proccess auto;
#       events { worker_connections 1024; }
#       http {
#         server {
#       }
#       }
configs: {}

# This is to setup the secrets for variables more information can be found here: https://kubernetes.io/docs/concepts/configuration/secret/
# example:
# secrets:
#   appSecret:
#     enabled: true
#     name: "app-secret"
#     mountPath: "/secret/app"
#     fileName: "app-secret.env"
#     readOnly: true
#     data: |
#       DB_PASSWORD = "supersecret";
#       DB_USER = "postgres";
#   apiSecret:
#     enabled: true
#     name: "db-secret"
#     mountPath: "/config/db-secret"
#     fileName: "db-secret.yaml"
#     readOnly: true
#     data: |
#       DB_USER = "postgres";
#       DB_PASS = "pass123";
#   keyValueSecret:
#     enabled: true
#     name: "env-from-secret"
#     envFrom: true
#     data:
#       DB_USER: "postgres"
#       DB_PASS: "pass123"
#   configWithEnvKeys:
#     enabled: true
#     name: "config-with-env-keys"
#     envVars:
#       - envName: "DB_USER"
#         key: "username"
#         optional: true
#       - envName: "DB_PASSWORD"
#         key: "password"
#         optional: false
#   configWithSubPath:
#     enabled: true
#     name: "config-with-sub-path"
#     mountPath: "/config/app"
#     subPath: "app-config.yaml"
#     fileName: "app-config.yaml"
#     readOnly: false
#     data: |
#       user nginx;
#       worker_proccess auto;
#       events { worker_connections 1024; }
#       http {
#         server {
#           listen 80;
#           server_name localhost;
#           location / {
#             root /usr/share/nginx/html;
#             index index.html index.htm;
#           }
#         }
#       }
#   configWithSubPathExpr:
#     enabled: true
#     name: "config-with-sub-path-expr"
#     mountPath: "/config/app"
#     subPathExpr: "$(POD_NAME)"
#     subPathExprFieldPath: "metadata.name"
#     fileName: "app-config.yaml"
#     readOnly: false
#     data: |
#       user nginx;
#       worker_proccess auto;
#       events { worker_connections 1024; }
#       http {
#         server {
#           listen 80;
#           server_name localhost;
#           location / {
#             root /usr/share/nginx/html;
#             index index.html index.htm;
#           }
#         }
#       }
secrets: {}

# This is to setup the external secrets for variables more information can be found here: https://github.com/external-secrets/external-secrets
# example:
# externalSecrets:
#   appExternalSecret:
#     enabled: true
#     name: "app-external-secret"
#     secretStoreName: "default-secret-store"
#     kind: "SecretStore"
#     k8sSecretName: "app-secret"
#     refreshInterval: "1h"
#     dataFrom:
#       key: "secrets/app-secret"
#     templateData:
#       app-secret.conf: |
#         DB_USER={{ .username }}
#         DB_PASSWORD={{ .password }}
#     mountPath: "/secret/app"
#     readOnly: true
#   dbExternalSecret:
#     enabled: true
#     name: "db-external-secret"
#     secretStoreName: "default-secret-store"
#     kind: "SecretStore"
#     k8sSecretName: "db-secret"
#     refreshInterval: "1h"
#     data:
#       - secretKey: "DB_USER"
#         remoteKey: "secrets/db-secret"
#         property: "db_user"
#       - secretKey: "DB_PASS"
#         remoteKey: "secrets/db-secret"
#         property: "db_pass"
#     mountPath: "/config/db-secret"
#     readOnly: true
#   keyValueExternalSecret:
#     enabled: true
#     name: "env-from-external-secret"
#     secretStoreName: "default-secret-store"
#     kind: "SecretStore"
#     k8sSecretName: "keyvalue-secret"
#     refreshInterval: "1h"
#     envFrom: true
#     dataFrom:
#       key: "secrets/keyvalue-secret"
#   configWithEnvKeys:
#     enabled: true
#     name: "config-with-env-keys"
#     secretStoreName: "default-secret-store"
#     kind: "SecretStore"
#     k8sSecretName: "config-env-secret"
#     refreshInterval: "1h"
#     data:
#       - secretKey: "DB_USER"
#         remoteKey: "secrets/config-db-user"
#       - secretKey: "DB_PASSWORD"
#         remoteKey: "secrets/config-db-pass"
#     templateFrom:
#       configMap: "app-config-tmpl"
#       key: "config.yml"
#   configWithSubPath:
#     enabled: true
#     name: "config-with-sub-path"
#     secretStoreName: "default-secret-store"
#     kind: "SecretStore"
#     k8sSecretName: "config-sub-path"
#     refreshInterval: "1h"
#     data:
#       - secretKey: "DB_USER"
#         remoteRef:
#           key: "secrets/config-sub-path"
#     mountPath: "/config/app"
#     subPath: "app-config.yaml"
#     readOnly: false
#   configWithSubPathExpr:
#     enabled: true
#     name: "config-with-sub-path-expr"
#     secretStoreName: "default-secret-store"
#     kind: "SecretStore"
#     k8sSecretName: "config-sub-path-expr"
#     refreshInterval: "1h"
#     data:
#       - secretKey: "DB_USER"
#         remoteRef:
#           key: "secrets/config-sub-path-expr"
#     mountPath: "/config/app"
#     subPathExpr: "$(POD_NAME)"
#     subPathExprFieldPath: "metadata.name"
#     readOnly: false
externalSecrets: {}

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe: {}
  # httpGet:
  #   path: /
  #   port: http
readinessProbe: {}
  # httpGet:
  #   path: /
  #   port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 75
    - type: Resource
      resource:
        name: memory
        targetAverageValue: 512Mi
    - type: External
      external:
        metric:
          name: http_requests_per_second
        target:
          value: 100

# This section is for setting up persistent storage more information can be found here: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
# enabled is a boolean that determines whether the persistent volume is enabled or not.
# pvc is a dictionary that contains the name and other options for the persistent volume claim.
# example:
# persistent:
#   enabled: true
#   pvc:
#     name: "custom-pvc"
#     size: 10Gi
#     storageClass: "csi-cinder-ssd-delete"
#     accessModes:
#       - ReadWriteMany
persistent:
  enabled: false
  pvc:
    name: "custom-pvc"
    size: 10Gi
    storageClass: ""
    annotations: {}
    accessModes:
      - ReadWriteMany
  mountPath: "/custom-path"
  readOnly: false

# nodeSelector is a dictionary that defines the node selection criteria for the pod.
# More information can be found here: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
nodeSelector: {}

# tolerations is a list of tolerations for the pod.
# More information can be found here: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# affinity is a dictionary that defines the scheduling rules for the pod.
# More information can be found here: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

# priorityClassName is a string that defines the priority class name for the pod.
# More information can be found here: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
priorityClassName: ""

# PodDisruptionBudget is a Kubernetes object that allows you to define the minimum number of replicas that must be available for a deployment.
# More information can be found here: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
podDisruptionBudget:
  enabled: false
  minAvailable: 1

# terminationGracePeriodSeconds is the amount of time the pod has to clean up and shut down before it is killed.
# More information can be found here: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
terminationGracePeriodSeconds: 30