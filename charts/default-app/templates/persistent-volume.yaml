{{- if and (.Values.persistent | default dict) (.Values.persistent.pv | default dict) (.Values.persistent.pv.enabled | default false) }}
  {{- range .Values.persistent.pv.volumes }}
    {{- if .enabled | default true }}
apiVersion: v1
kind: PersistentVolume
metadata:
    name: {{ .name }}
    labels:
        {{- include "default-app.labels" $ | nindent 4 }}
    {{- with .annotations }}
    annotations:
        {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  capacity:
    storage: {{ .size | default "1Gi" }}
  {{- if .volumeMode }}
  volumeMode: {{ .volumeMode }}
  {{- end }}
  accessModes:
      {{- .accessModes | default (list "ReadWriteOnce") | toYaml | nindent 4 }}
  {{- if .reclaimPolicy }}
  persistentVolumeReclaimPolicy: {{ .reclaimPolicy }}
  {{- end }}
  {{- if .storageClass }}
  storageClassName: {{ .storageClass }}
  {{- end }}
  {{- if and .claimRef (not (empty .claimRef)) }}
  claimRef:
      {{- if .claimRef.name }}
      name: {{ .claimRef.name }}
      {{- end }}
      {{- if .claimRef.namespace }}
      namespace: {{ .claimRef.namespace }}
      {{- end }}
      {{- if .claimRef.uid }}
      uid: {{ .claimRef.uid }}
      {{- end }}
  {{- end }}
  {{- if .nodeAffinity }}
  nodeAffinity:
      required:
          nodeSelectorTerms:
          - matchExpressions:
              {{- if .nodeAffinity }}
              - key: kubernetes.io/hostname
                operator: In
                values:
                  {{- toYaml .nodeAffinity | nindent 16 }}
              {{- end }}
  {{- end }}
  {{- if .hostPath}}
  hostPath:
      path: {{ .hostPath}}
  {{- end }}
  {{- if .csi }}
  csi:
      driver: {{ .csi.driver }}
      volumeHandle: {{ .csi.volumeHandle | quote }}
      {{- if .csi.volumeAttributes }}
      volumeAttributes:
          {{- toYaml .csi.volumeAttributes | nindent 6 }}
      {{- end }}
      {{- if .csi.controllerPublishSecretRef }}
      controllerPublishSecretRef:
          name: {{ .csi.controllerPublishSecretRef.name }}
          namespace: {{ .csi.controllerPublishSecretRef.namespace }}
      {{- end }}
      {{- if .csi.controllerExpandSecretRef }}
      controllerExpandSecretRef:
          name: {{ .csi.controllerExpandSecretRef.name }}
      {{- end }}
      {{- if .csi.nodePublishSecretRef }}
      nodePublishSecretRef:
          name: {{ .csi.nodePublishSecretRef.name }}
          namespace: {{ .csi.nodePublishSecretRef.namespace }}
      {{- end }}
      {{- if .csi.nodeStageSecretRef }}
      nodeStageSecretRef:
          name: {{ .csi.nodeStageSecretRef.name }}
          namespace: {{ .csi.nodeStageSecretRef.namespace }}
      {{- end }}
  {{- end }}
{{- end }}
  {{- end }}
    {{- end }}