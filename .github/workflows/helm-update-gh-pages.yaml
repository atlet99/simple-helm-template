name: Update Helm Repo Index

on:
  workflow_run:
    workflows: ["Release Helm Chart"]
    types:
      - completed

permissions:
  contents: write

jobs:
  update-index:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Get latest workflow run ID
        id: get_run_id
        run: |
            LATEST_RUN_ID=$(gh run list --workflow="Release Helm Chart" --branch=main --json databaseId --jq '.[0].databaseId')
            echo "RUN_ID=${LATEST_RUN_ID}" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Helm Packages
        uses: actions/download-artifact@v4.1.9
        with:
          name: helm-packages
          path: .cr-release-packages/
          merge-multiple: true
          repository: ${{ github.repository }}
          run-id: ${{ env.RUN_ID }}
      
      - name: Display Helm Packages
        run: ls -R .cr-release-packages/

      - name: Install Chart Releaser
        run: |
          ARCH=$(uname -m)
          OS=$(uname -s | tr '[:upper:]' '[:lower:]')
          CR_VERSION=$(curl -s https://api.github.com/repos/helm/chart-releaser/releases/latest | jq -r '.tag_name' | sed 's/^v//')

          if [[ "$ARCH" == "x86_64" ]]; then ARCH="amd64"; fi
          if [[ "$ARCH" == "aarch64" ]]; then ARCH="arm64"; fi

          CR_BINARY="chart-releaser_${CR_VERSION}_${OS}_${ARCH}.tar.gz"
          DOWNLOAD_URL="https://github.com/helm/chart-releaser/releases/download/v${CR_VERSION}/${CR_BINARY}"

          echo "Downloading Chart Releaser from $DOWNLOAD_URL"
          curl -fsSL -o cr.tar.gz -L "$DOWNLOAD_URL" || { echo "Failed to download"; exit 1; }

          echo "Extracting Chart Releaser..."
          tar -xzf cr.tar.gz || { echo "Failed to extract"; exit 1; }

          echo "Moving binary to /usr/local/bin"
          chmod +x cr
          sudo mv cr /usr/local/bin/cr

          echo "Cleaning up..."
          rm -rf cr.tar.gz LICENSE README.md

          echo "Chart Releaser installed successfully:"
          cr version

      - name: Run Chart Releaser Index
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          cr index --owner "${{ github.repository_owner }}" \
            --git-repo "$(basename ${{ github.repository }})" \
            --package-path .cr-release-packages \
            --packages-with-index \
            --index-path . \
            --token "${{ secrets.GITHUB_TOKEN }}" \
            --push

      - name: Commit and push changes
        run: |
          echo "Checking if index.yaml has changed..."
          git status
          if git diff --quiet index.yaml; then
            echo "No changes detected in index.yaml"
            exit 0
          fi
          echo "Changes detected in index.yaml"
          git add index.yaml .cr-release-packages/*.tgz
          git commit -m "Update Helm repo index"
          git push origin gh-pages